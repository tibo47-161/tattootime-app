rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Hilfsfunktionen
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    function isValidDate() {
      return request.resource.data.date is string 
        && request.resource.data.date.matches('^\\d{4}-\\d{2}-\\d{2}$');
    }
    
    function isValidTime() {
      return request.resource.data.time is string 
        && request.resource.data.time.matches('^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$');
    }

    function isValidEmail() {
      return request.resource.data.email is string
        && request.resource.data.email.matches('^[^@]+@[^@]+\\.[^@]+$');
    }

    // Benutzer-Regeln
    match /users/{userId} {
      allow read: if isOwner(userId);
      allow create: if isAuthenticated() 
        && isValidEmail()
        && request.resource.data.name is string
        && request.resource.data.password is string;
      allow update: if isOwner(userId)
        && (!request.resource.data.diff(resource.data).affectedKeys()
            .hasAny(['email', 'password']));
      allow delete: if isOwner(userId);
    }

    // Termin-Regeln
    match /appointments/{appointmentId} {
      allow read: if isOwner(resource.data.userId);
      allow create: if isAuthenticated()
        && request.resource.data.userId == request.auth.uid
        && isValidDate()
        && isValidTime()
        && request.resource.data.description is string;
      allow update: if isOwner(resource.data.userId)
        && isValidDate()
        && isValidTime()
        && request.resource.data.description is string;
      allow delete: if isOwner(resource.data.userId);
    }

    // Design-Regeln
    match /designs/{designId} {
      allow read: if isOwner(resource.data.userId);
      allow create: if isAuthenticated()
        && request.resource.data.userId == request.auth.uid
        && request.resource.data.name is string
        && request.resource.data.description is string
        && request.resource.data.imageUrl is string;
      allow update: if isOwner(resource.data.userId)
        && request.resource.data.name is string
        && request.resource.data.description is string
        && request.resource.data.imageUrl is string;
      allow delete: if isOwner(resource.data.userId);
    }
  }
}
